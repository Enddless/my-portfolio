/**
 * @remix-run/router v1.15.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function v(){return v=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},v.apply(this,arguments)}var w;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(w||(w={}));const L="popstate";function V(e){e===void 0&&(e={});function t(a,r){let{pathname:u,search:l,hash:s}=a.location;return O("",{pathname:u,search:l,hash:s},r.state&&r.state.usr||null,r.state&&r.state.key||"default")}function n(a,r){return typeof r=="string"?r:B(r)}return R(t,n,null,e)}function x(e,t){if(e===!1||e===null||typeof e>"u")throw new Error(t)}function H(e,t){if(!e){typeof console<"u"&&console.warn(t);try{throw new Error(t)}catch{}}}function I(){return Math.random().toString(36).substr(2,8)}function b(e,t){return{usr:e.state,key:e.key,idx:t}}function O(e,t,n,a){return n===void 0&&(n=null),v({pathname:typeof e=="string"?e:e.pathname,search:"",hash:""},typeof t=="string"?C(t):t,{state:n,key:t&&t.key||a||I()})}function B(e){let{pathname:t="/",search:n="",hash:a=""}=e;return n&&n!=="?"&&(t+=n.charAt(0)==="?"?n:"?"+n),a&&a!=="#"&&(t+=a.charAt(0)==="#"?a:"#"+a),t}function C(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function R(e,t,n,a){a===void 0&&(a={});let{window:r=document.defaultView,v5Compat:u=!1}=a,l=r.history,s=w.Pop,o=null,c=m();c==null&&(c=0,l.replaceState(v({},l.state,{idx:c}),""));function m(){return(l.state||{idx:null}).idx}function d(){s=w.Pop;let i=m(),h=i==null?null:i-c;c=i,o&&o({action:s,location:p.location,delta:h})}function g(i,h){s=w.Push;let f=O(p.location,i,h);n&&n(f,i),c=m()+1;let E=b(f,c),P=p.createHref(f);try{l.pushState(E,"",P)}catch($){if($ instanceof DOMException&&$.name==="DataCloneError")throw $;r.location.assign(P)}u&&o&&o({action:s,location:p.location,delta:1})}function S(i,h){s=w.Replace;let f=O(p.location,i,h);n&&n(f,i),c=m();let E=b(f,c),P=p.createHref(f);l.replaceState(E,"",P),u&&o&&o({action:s,location:p.location,delta:0})}function y(i){let h=r.location.origin!=="null"?r.location.origin:r.location.href,f=typeof i=="string"?i:B(i);return f=f.replace(/ $/,"%20"),x(h,"No window.location.(origin|href) available to create URL for href: "+f),new URL(f,h)}let p={get action(){return s},get location(){return e(r,l)},listen(i){if(o)throw new Error("A history only accepts one active listener");return r.addEventListener(L,d),o=i,()=>{r.removeEventListener(L,d),o=null}},createHref(i){return t(r,i)},createURL:y,encodeLocation(i){let h=y(i);return{pathname:h.pathname,search:h.search,hash:h.hash}},push:g,replace:S,go(i){return l.go(i)}};return p}var j;(function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"})(j||(j={}));function _(e,t){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[n,a]=A(e.path,e.caseSensitive,e.end),r=t.match(n);if(!r)return null;let u=r[0],l=u.replace(/(.)\/+$/,"$1"),s=r.slice(1);return{params:a.reduce((c,m,d)=>{let{paramName:g,isOptional:S}=m;if(g==="*"){let p=s[d]||"";l=u.slice(0,u.length-p.length).replace(/(.)\/+$/,"$1")}const y=s[d];return S&&!y?c[g]=void 0:c[g]=(y||"").replace(/%2F/g,"/"),c},{}),pathname:u,pathnameBase:l,pattern:e}}function A(e,t,n){t===void 0&&(t=!1),n===void 0&&(n=!0),H(e==="*"||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were '+('"'+e.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+e.replace(/\*$/,"/*")+'".'));let a=[],r="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(l,s,o)=>(a.push({paramName:s,isOptional:o!=null}),o?"/?([^\\/]+)?":"/([^\\/]+)"));return e.endsWith("*")?(a.push({paramName:"*"}),r+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?r+="\\/*$":e!==""&&e!=="/"&&(r+="(?:(?=\\/|$))"),[new RegExp(r,t?void 0:"i"),a]}function q(e,t){if(t==="/")return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&a!=="/"?null:e.slice(n)||"/"}function U(e,t){t===void 0&&(t="/");let{pathname:n,search:a="",hash:r=""}=typeof e=="string"?C(e):e;return{pathname:n?n.startsWith("/")?n:k(n,t):t,search:T(a),hash:z(r)}}function k(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach(r=>{r===".."?n.length>1&&n.pop():r!=="."&&n.push(r)}),n.length>1?n.join("/"):"/"}function W(e,t,n,a){return"Cannot include a '"+e+"' character in a manually specified "+("`to."+t+"` field ["+JSON.stringify(a)+"].  Please separate it out to the ")+("`to."+n+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function N(e){return e.filter((t,n)=>n===0||t.route.path&&t.route.path.length>0)}function F(e,t){let n=N(e);return t?n.map((a,r)=>r===e.length-1?a.pathname:a.pathnameBase):n.map(a=>a.pathnameBase)}function G(e,t,n,a){a===void 0&&(a=!1);let r;typeof e=="string"?r=C(e):(r=v({},e),x(!r.pathname||!r.pathname.includes("?"),W("?","pathname","search",r)),x(!r.pathname||!r.pathname.includes("#"),W("#","pathname","hash",r)),x(!r.search||!r.search.includes("#"),W("#","search","hash",r)));let u=e===""||r.pathname==="",l=u?"/":r.pathname,s;if(l==null)s=n;else{let d=t.length-1;if(!a&&l.startsWith("..")){let g=l.split("/");for(;g[0]==="..";)g.shift(),d-=1;r.pathname=g.join("/")}s=d>=0?t[d]:"/"}let o=U(r,s),c=l&&l!=="/"&&l.endsWith("/"),m=(u||l===".")&&n.endsWith("/");return!o.pathname.endsWith("/")&&(c||m)&&(o.pathname+="/"),o}const J=e=>e.join("/").replace(/\/\/+/g,"/"),T=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,z=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e,M=["post","put","patch","delete"];new Set(M);const D=["get",...M];new Set(D);export{w as A,B as a,V as c,F as g,x as i,J as j,_ as m,C as p,G as r,q as s};
